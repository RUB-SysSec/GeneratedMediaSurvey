events {
  worker_connections  4096;  ## Default: 1024
}

http { 
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile     on;
    tcp_nopush   on;
    server_names_hash_bucket_size 128; # this seems to be required for some vhosts


    server {
        # Define the server name, IP address, and/or port of the server
        listen 80;
        server_name $YOUR_DOMAIN $YOUR_DOMAINm.de;

        # cert bot challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # force ssl
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        # Define the server name, IP address, and/or port of the server
        listen 443 ssl;
        server_name $YOUR_DOMAIN $YOUR_DOMAINm.de;

        # Define the specified charset to the “Content-Type” response header field
        charset utf-8;

        # certbot
        ssl_certificate /etc/letsencrypt/live/$YOUR_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$YOUR_DOMAIN/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        include    mime.types;

        # Configure NGINX to deliver static content from the specified folder
        location /static {
            root /www/data;
            expires 30d;
        }

        location = /en {
            return 302 /en/;
        }

        location /en/ {
            # Define the location of the proxy server to send the request to
            proxy_pass http://likert-en:8080/;
        }

        # route to rating service
        location = /de {
            return 302 /de/;
        }

        location /de/ {
            # Define the location of the proxy server to send the request to
            proxy_pass http://likert-de:8080/;
        }
        
        # route to rating service
        location = /cn {
            return 302 /cn/;
        }

        location /cn/ {
            # Define the location of the proxy server to send the request to
            proxy_pass http://likert-cn:8080/;
        }

        # route to rating service
        location = /stats_external {
            proxy_pass http://stats-service:8080/stats_external;
        }

    }
}
